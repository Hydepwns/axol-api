---
# IMPORTANT: This is an example file!
# Copy to secrets.yml and encrypt with ansible-vault BEFORE adding real credentials!
# Command: ansible-vault encrypt ansible/group_vars/all/secrets.yml

# MinIO authentication (REQUIRED)
# CHANGE THESE VALUES FOR PRODUCTION!
minio_credentials:
  root_user: "admin"
  root_password: "REPLACE_WITH_SECURE_PASSWORD"
  access_key: "REPLACE_WITH_ACCESS_KEY"
  secret_key: "REPLACE_WITH_SECRET_KEY"

# SSL certificates paths (for production)
ssl_certificates:
  minio_certificate: "/etc/minio/certs/public.crt"
  minio_key: "/etc/minio/certs/private.key"

# Tailscale credentials
# Generate this in Tailscale admin console: https://login.tailscale.com/admin/settings/keys
tailscale_auth_key: "REPLACE_WITH_TAILSCALE_AUTH_KEY"

# Database credentials (if used with blockchain data)
database_credentials:
  postgres_user: "blockchain_user"
  postgres_password: "REPLACE_WITH_SECURE_DB_PASSWORD"

# Monitoring credentials
monitoring_credentials:
  grafana_admin_user: "admin"
  grafana_admin_password: "REPLACE_WITH_SECURE_GRAFANA_PASSWORD"
  prometheus_basic_auth_user: "prometheus"
  prometheus_basic_auth_password: "REPLACE_WITH_SECURE_PROMETHEUS_PASSWORD"

# API credentials
api_credentials:
  admin_token: "REPLACE_WITH_SECURE_ADMIN_TOKEN"
  service_account_key: "REPLACE_WITH_SECURE_SERVICE_ACCOUNT_KEY"

# SECURITY NOTES:
# 1. NEVER commit this file to git after adding real credentials!
# 2. To encrypt: ansible-vault encrypt ansible/group_vars/all/secrets.yml
# 3. To edit encrypted file: ansible-vault edit ansible/group_vars/all/secrets.yml
# 4. To use in playbooks: ansible-playbook ... --ask-vault-pass
#    Or: ansible-playbook ... --vault-password-file=~/.vault_pass
